[tool.poetry]
name = "01-hello-world"
version = "0.1.0"
description = ""
authors = ["Eduardo Rolim <vndmtrx@duck.com>"]
readme = "README.md"
packages = [{include = "hello_world"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
taskipy = "^1.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
test = {cmd = "export PYTHONDONTWRITEBYTECODE=1; pytest -x -p no:cacheprovider", help = "Roda os testes e aborta se houver falha."}
cov = {cmd = "export PYTHONDONTWRITEBYTECODE=1; pytest --cov=hello_world -p no:cacheprovider", help = "Roda testes e entrega um relatório de cobertura do código."}
lint = {cmd = "export PYTHONDONTWRITEBYTECODE=1; black hello_world", help = "Faz a formatação do código."}
clean = {cmd = "find . -not -path './.venv/*' | grep -E \"(\\.pytest_cache|__pycache__|\\.py[co]$)\" | xargs rm -rf", help = "Limpa o projeto de arquivos gerados automaticamente."}